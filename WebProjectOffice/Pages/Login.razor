@page "/"
@inject DialogService DialogService;
@inject NavigationManager NavigationManager;
<RadzenRow>
	<div class="rz-p-12 rz-text-align-center">
		<RadzenButton Text="Alert dialog" ButtonStyle="ButtonStyle.Secondary"
					  Click=@(args => DialogService.Alert("Some message!", "MyTitle", new AlertOptions() { OkButtonText = "Yes" })) />
	</div>
		<RadzenLayout class="d-flex justify-content-center align-items-center align-middle" style="width: 100%; max-width: 400px;">
			<RadzenStack>
				<RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-background-color-info rz-p-12">
					<RadzenText TextStyle="TextStyle.DisplayH3" TagName="TagName.H2" Class="rz-color-white rz-mb-0">Авторизация</RadzenText>
				</RadzenCard>
				<RadzenCard Class="rz-shadow-0 rz-p-12">
					<RadzenTemplateForm Data=@("SimpleLogin")>
						<RadzenLogin AllowRegister="false" UserText="Логин" PasswordText="Пароль" Login=@(args => LoginBtn(args)) AllowResetPassword="false" />
					</RadzenTemplateForm>
					<RadzenText Text="Неверный логин или пароль" Style="color: red" Visible="@_error"></RadzenText>
				</RadzenCard>
			</RadzenStack>
		</RadzenLayout>
</RadzenRow>

@code {
	private bool _error { get; set; } = false;

	protected override void OnInitialized()
	{
		MainLayout.ShowMenu = false;
		Services.UserService.ResetUser();
	}

	private async void LoginBtn(LoginArgs args)
	{
		bool successfull = await Services.UserService.Login(args.Username, args.Password);
		if (!successfull)
		{
			_error = true;
			// await DialogService.Alert("Неправильный логин или пароль", "Ошибка");
			StateHasChanged();
			return;
		}
		_error = false;
		NavigationManager.NavigateTo("/Menu");
		MainLayout.ShowMenu = true;
	}
}
